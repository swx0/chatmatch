# This "input" configures a global authorization rule to enable public access to
# all models in this schema. Learn more about authorization rules here: https://docs.amplify.aws/cli/graphql/authorization-rules
# input AMPLIFY { globalAuthRule: AuthRule = { allow: public } } # FOR TESTING ONLY!

type User @model @auth(rules: [{ allow: private }]) {
  id: ID!
  name: String!
  imageUri: String
  year: String
  personalityType: String
  hobbies: String
  modules: String
  # List of ChatRoomUser type where the User is present in the ChatRoom
  chatRoomUserList: [ChatRoomUser] @connection(keyName: "byUser", fields: ["id"])
}

type ChatRoomUser 
  @model
  @auth(rules: [{ allow: private }])
  # userID is primary key to search items in DB, chatRoomID is sort key
  @key(name: "byUser", fields:["userID", "chatRoomID"])
  @key(name: "byChatRoom", fields:["chatRoomID", "userID"]) {
    id: ID!
    userID: ID!
    chatRoomID: ID!
    # Connect to User type, based on userID attribute
    user: User @connection(fields: ["userID"])
    # Connect to ChatRoom type, based on chatRoomID attribute
    chatRoom: ChatRoom @connection(fields:["chatRoomID"])

}

type ChatRoom @model @auth(rules: [{ allow: private }]) {
  id: ID!
  chatRoomUserList: [ChatRoomUser] @connection(keyName:"byChatRoom", fields: ["id"])
  messages: [Message] @connection(keyName:"byChatRoom", fields: ["id"])
}

type Message
  @model 
  @auth(rules: [{ allow: private }])
  # Get message by chatRoomID and creation date
  @key(name: "byChatRoom", fields: ["chatRoomID", "createdAt"], queryField: "messagesByChatRoomByCreatedAt") {
    id: ID!
    userID: ID!  # ID of user who sent the message
    chatRoomID: ID! # chatRoomID where the message was sent
    createdAt: String!
    body: String! 
    # Connect to User type, based on userID attribute
    user: User @connection(fields: ["userID"])
    # Connect to ChatRoom type, based on chatRoomID attribute
    chatRoom: ChatRoom @connection(fields:["chatRoomID"])
}

type Subscription {
  onCreateMessageByChatRoomID(chatRoomID: ID!): Message
    @aws_subscribe(mutations: ["createMessage"])
}